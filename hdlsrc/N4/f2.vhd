-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\N4\f2.vhd
-- Created: 2017-04-20 17:00:51
-- 
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: f2
-- Source Path: N4/HDL_DUT/f2
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY f2 IS
  PORT( in1                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        in2                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        out1                              :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
        );
END f2;


ARCHITECTURE rtl OF f2 IS

  -- Component Declarations
  COMPONENT MinMax_block1
    PORT( in0                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          in1                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          out0                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  COMPONENT MATLAB_Function
    PORT( s                               :   IN    std_logic;
          L                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          y                               :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : MinMax_block1
    USE ENTITY work.MinMax_block1(rtl);

  FOR ALL : MATLAB_Function
    USE ENTITY work.MATLAB_Function(rtl);

  -- Signals
  SIGNAL in1_signed                       : signed(7 DOWNTO 0);  -- int8
  SIGNAL in2_signed                       : signed(7 DOWNTO 0);  -- int8
  SIGNAL dtc1                             : signed(1 DOWNTO 0);  -- sfix2_E6
  SIGNAL Extract_Bits_out1_is_not0        : std_logic;
  SIGNAL dtc1_1                           : signed(1 DOWNTO 0);  -- sfix2_E6
  SIGNAL Extract_Bits1_out1_is_not0       : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Abs_y                            : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Abs_out1                         : signed(7 DOWNTO 0);  -- int8
  SIGNAL Abs1_y                           : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Abs1_out1                        : signed(7 DOWNTO 0);  -- int8
  SIGNAL MinMax_out1                      : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL MATLAB_Function_out1             : std_logic_vector(7 DOWNTO 0);  -- ufix8

BEGIN
  u_MinMax : MinMax_block1
    PORT MAP( in0 => std_logic_vector(Abs_out1),  -- int8
              in1 => std_logic_vector(Abs1_out1),  -- int8
              out0 => MinMax_out1  -- int8
              );

  u_MATLAB_Function : MATLAB_Function
    PORT MAP( s => Logical_Operator_out1,
              L => MinMax_out1,  -- int8
              y => MATLAB_Function_out1  -- int8
              );

  in1_signed <= signed(in1);

  in2_signed <= signed(in2);

  dtc1 <= in1_signed(7 DOWNTO 6);

  
  Extract_Bits_out1_is_not0 <= '1' WHEN dtc1 /= to_signed(16#0#, 2) ELSE
      '0';

  dtc1_1 <= in2_signed(7 DOWNTO 6);

  
  Extract_Bits1_out1_is_not0 <= '1' WHEN dtc1_1 /= to_signed(16#0#, 2) ELSE
      '0';

  Logical_Operator_out1 <= Extract_Bits_out1_is_not0 XOR Extract_Bits1_out1_is_not0;

  
  Abs_y <=  - (resize(in1_signed, 9)) WHEN in1_signed < to_signed(16#00#, 8) ELSE
      resize(in1_signed, 9);
  Abs_out1 <= Abs_y(7 DOWNTO 0);

  
  Abs1_y <=  - (resize(in2_signed, 9)) WHEN in2_signed < to_signed(16#00#, 8) ELSE
      resize(in2_signed, 9);
  Abs1_out1 <= Abs1_y(7 DOWNTO 0);

  out1 <= MATLAB_Function_out1;

END rtl;

