-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\encoderN8withDelay\stateMachine.vhd
-- Created: 2017-04-25 14:30:31
-- 
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: stateMachine
-- Source Path: encoderN8withDelay/HDL_DUT/stateMachine
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_DUT_pkg.ALL;

ENTITY stateMachine IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        u                                 :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        y                                 :   OUT   std_logic
        );
END stateMachine;


ARCHITECTURE rtl OF stateMachine IS

  -- Signals
  SIGNAL u_signed                         : signed(7 DOWNTO 0);  -- int8
  SIGNAL is_stateMachine                  : T_state_type_is_stateMachine;  -- uint8
  SIGNAL y_reg                            : std_logic;
  SIGNAL is_stateMachine_next             : T_state_type_is_stateMachine;  -- enum type state_type_is_stateMachine (2 enums)
  SIGNAL y_reg_next                       : std_logic;

BEGIN
  u_signed <= signed(u);

  stateMachine_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      is_stateMachine <= IN_state1;
      y_reg <= '1';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        is_stateMachine <= is_stateMachine_next;
        y_reg <= y_reg_next;
      END IF;
    END IF;
  END PROCESS stateMachine_1_process;

  stateMachine_1_output : PROCESS (is_stateMachine, u_signed, y_reg)
  BEGIN
    y_reg_next <= y_reg;
    is_stateMachine_next <= is_stateMachine;
    CASE is_stateMachine IS
      WHEN IN_state1 =>
        IF u_signed > to_signed(16#02#, 8) THEN 
          is_stateMachine_next <= IN_state2;
          y_reg_next <= '0';
        END IF;
      WHEN OTHERS => 
        IF u_signed < to_signed(16#02#, 8) THEN 
          is_stateMachine_next <= IN_state1;
          y_reg_next <= '1';
        END IF;
    END CASE;
  END PROCESS stateMachine_1_output;

  y <= y_reg_next;

END rtl;

