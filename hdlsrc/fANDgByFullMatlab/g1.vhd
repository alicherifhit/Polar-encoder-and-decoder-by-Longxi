-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\fANDgByFullMatlab\g1.vhd
-- Created: 2017-04-27 12:37:18
-- 
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: g1
-- Source Path: fANDgByFullMatlab/HDL_DUT/g1
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY g1 IS
  PORT( in1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        in2                               :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        b                                 :   IN    std_logic;
        out_rsvd                          :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END g1;


ARCHITECTURE rtl OF g1 IS

  -- Signals
  SIGNAL in1_signed                       : signed(15 DOWNTO 0);  -- int16
  SIGNAL in2_signed                       : signed(15 DOWNTO 0);  -- int16
  SIGNAL out_tmp                          : signed(15 DOWNTO 0);  -- int16

BEGIN
  in1_signed <= signed(in1);

  in2_signed <= signed(in2);

  g1_1_output : PROCESS (in1_signed, in2_signed, b)
    VARIABLE t_0 : signed(16 DOWNTO 0);
    VARIABLE add_cast : signed(15 DOWNTO 0);
    VARIABLE add_cast_0 : signed(16 DOWNTO 0);
    VARIABLE add_temp : signed(16 DOWNTO 0);
    VARIABLE add_temp_0 : signed(16 DOWNTO 0);
  BEGIN
    IF ( NOT b) = '1' THEN 
      add_temp_0 := resize(in1_signed, 17) + resize(in2_signed, 17);
      IF (add_temp_0(16) = '0') AND (add_temp_0(15) /= '0') THEN 
        out_tmp <= X"7FFF";
      ELSIF (add_temp_0(16) = '1') AND (add_temp_0(15) /= '1') THEN 
        out_tmp <= X"8000";
      ELSE 
        out_tmp <= add_temp_0(15 DOWNTO 0);
      END IF;
    ELSE 
      t_0 :=  - (resize(in1_signed, 17));
      IF (t_0(16) = '0') AND (t_0(15) /= '0') THEN 
        add_cast := X"7FFF";
      ELSIF (t_0(16) = '1') AND (t_0(15) /= '1') THEN 
        add_cast := X"8000";
      ELSE 
        add_cast := t_0(15 DOWNTO 0);
      END IF;
      add_cast_0 := resize(add_cast, 17);
      add_temp := add_cast_0 + resize(in2_signed, 17);
      IF (add_temp(16) = '0') AND (add_temp(15) /= '0') THEN 
        out_tmp <= X"7FFF";
      ELSIF (add_temp(16) = '1') AND (add_temp(15) /= '1') THEN 
        out_tmp <= X"8000";
      ELSE 
        out_tmp <= add_temp(15 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS g1_1_output;


  out_rsvd <= std_logic_vector(out_tmp);

END rtl;

