-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\fANDgByFullMatlab\HDL_DUT.vhd
-- Created: 2017-04-27 12:37:18
-- 
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: HDL_DUT
-- Source Path: fANDgByFullMatlab/HDL_DUT
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY HDL_DUT IS
  PORT( in1                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        in2                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        out1                              :   OUT   std_logic_vector(7 DOWNTO 0);  -- int8
        out2                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END HDL_DUT;


ARCHITECTURE rtl OF HDL_DUT IS

  -- Component Declarations
  COMPONENT f1
    PORT( in1                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          in2                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          out_rsvd                        :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  COMPONENT g1
    PORT( in1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          in2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          b                               :   IN    std_logic;
          out_rsvd                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : f1
    USE ENTITY work.f1(rtl);

  FOR ALL : g1
    USE ENTITY work.g1(rtl);

  -- Signals
  SIGNAL out_rsvd                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL in1_signed                       : signed(7 DOWNTO 0);  -- int8
  SIGNAL Data_Type_Conversion_out1        : signed(15 DOWNTO 0);  -- int16
  SIGNAL in2_signed                       : signed(7 DOWNTO 0);  -- int8
  SIGNAL Data_Type_Conversion1_out1       : signed(15 DOWNTO 0);  -- int16
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL out_rsvd_1                       : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_f1 : f1
    PORT MAP( in1 => in1,  -- int8
              in2 => in2,  -- int8
              out_rsvd => out_rsvd  -- int8
              );

  u_g1 : g1
    PORT MAP( in1 => std_logic_vector(Data_Type_Conversion_out1),  -- int16
              in2 => std_logic_vector(Data_Type_Conversion1_out1),  -- int16
              b => Constant_out1,
              out_rsvd => out_rsvd_1  -- int16
              );

  in1_signed <= signed(in1);

  Data_Type_Conversion_out1 <= resize(in1_signed, 16);

  in2_signed <= signed(in2);

  Data_Type_Conversion1_out1 <= resize(in2_signed, 16);

  Constant_out1 <= '0';

  out1 <= out_rsvd;

  out2 <= out_rsvd_1;

END rtl;

