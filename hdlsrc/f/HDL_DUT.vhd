-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\f\HDL_DUT.vhd
-- Created: 2017-04-20 12:58:25
-- 
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: HDL_DUT
-- Source Path: f/HDL_DUT
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY HDL_DUT IS
  PORT( in1                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        in2                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        in3                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        in4                               :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        out1                              :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
        );
END HDL_DUT;


ARCHITECTURE rtl OF HDL_DUT IS

  -- Component Declarations
  COMPONENT f
    PORT( in1                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          in2                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          out1                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  COMPONENT f1
    PORT( in1                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          in2                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          out1                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  COMPONENT f2
    PORT( in1                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          in2                             :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          out1                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : f
    USE ENTITY work.f(rtl);

  FOR ALL : f1
    USE ENTITY work.f1(rtl);

  FOR ALL : f2
    USE ENTITY work.f2(rtl);

  -- Signals
  SIGNAL y                                : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL y_1                              : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL y_2                              : std_logic_vector(7 DOWNTO 0);  -- ufix8

BEGIN
  u_f : f
    PORT MAP( in1 => in1,  -- int8
              in2 => in2,  -- int8
              out1 => y  -- int8
              );

  u_f1 : f1
    PORT MAP( in1 => in3,  -- int8
              in2 => in4,  -- int8
              out1 => y_1  -- int8
              );

  u_f2 : f2
    PORT MAP( in1 => y,  -- int8
              in2 => y_1,  -- int8
              out1 => y_2  -- int8
              );

  out1 <= y_2;

END rtl;

